/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
/**
 *
 * @author Tama
 */
public class TambahKota extends javax.swing.JFrame {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/db_tiketpesawat"; // Ganti dengan URL database Anda
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "";
    private DefaultTableModel tableModel;

    /**
     * Creates new form TambahKota
     */
    public TambahKota() {
        initComponents();
        initTableModel();
        tampilDataKota();
        setSize(500,450);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfKota = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKota = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(tfKota);
        tfKota.setBounds(130, 60, 140, 22);

        jLabel1.setFont(new java.awt.Font("Sitka Display", 0, 14)); // NOI18N
        jLabel1.setText("Nama Kota");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 60, 90, 18);

        btnSimpan.setBackground(new java.awt.Color(153, 153, 153));
        btnSimpan.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/floppy-disk.png"))); // NOI18N
        btnSimpan.setText("SIMPAN");
        btnSimpan.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpan);
        btnSimpan.setBounds(360, 330, 100, 30);

        btnHapus.setBackground(new java.awt.Color(153, 153, 153));
        btnHapus.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-delete.png"))); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus);
        btnHapus.setBounds(310, 370, 100, 30);

        btnUbah.setBackground(new java.awt.Color(153, 153, 153));
        btnUbah.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        btnUbah.setText("UBAH");
        btnUbah.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        getContentPane().add(btnUbah);
        btnUbah.setBounds(250, 330, 100, 30);

        tblKota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Kota", "Nama Kota"
            }
        ));
        jScrollPane1.setViewportView(tblKota);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 110, 430, 210);

        btnKembali.setBackground(new java.awt.Color(153, 153, 153));
        btnKembali.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow-left.png"))); // NOI18N
        btnKembali.setText("KEMBALI");
        btnKembali.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        getContentPane().add(btnKembali);
        btnKembali.setBounds(360, 20, 110, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg-tambah-jadwal.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, -10, 500, 430);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        // Aksi yang diambil saat tombol Simpan ditekan
        String namaKota = tfKota.getText();

        // Simpan ke database
        simpanKeDatabase(namaKota);

        // Refresh JTable
        tampilDataKota();
        this.dispose();

            // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
            // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
            String userRole = LoginGUI.getUserRole();

            // Melakukan validasi peran dan membuat frame TiketPesawat
            TiketPesawat tiketPesawatFrame = new TiketPesawat(userRole);
            tiketPesawatFrame.setVisible(true);
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
            // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
            String userRole = LoginGUI.getUserRole();

            // Melakukan validasi peran dan membuat frame TiketPesawat
            TiketPesawat tiketPesawatFrame = new TiketPesawat(userRole);
            tiketPesawatFrame.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        // Aksi yang diambil saat tombol Hapus ditekan
    int selectedRow = tblKota.getSelectedRow();
    if (selectedRow != -1) {
        int idKota = (int) tblKota.getValueAt(selectedRow, 0);

        // Hapus dari database
        hapusDariDatabase(idKota);

        // Refresh JTable
        tampilDataKota();
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus.");
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        // Aksi yang diambil saat tombol Ubah ditekan
    int selectedRow = tblKota.getSelectedRow();
    if (selectedRow != -1) {
        int idKota = (int) tblKota.getValueAt(selectedRow, 0);
        String namaKotaBaru = tfKota.getText();

        // Ubah data di database
        ubahDiDatabase(idKota, namaKotaBaru);

        // Refresh JTable
        tampilDataKota();
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan diubah.");
    }
    }//GEN-LAST:event_btnUbahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TambahKota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TambahKota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TambahKota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TambahKota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TambahKota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKota;
    private javax.swing.JTextField tfKota;
    // End of variables declaration//GEN-END:variables

    private void simpanKeDatabase(String namaKota) {
        try {
            Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
            String sql = "INSERT INTO kota (nama_kota) VALUES (?)";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setString(1, namaKota);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan ke database.");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke database.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void tampilDataKota() {
        // Menghapus semua baris di tabel sebelum menampilkan data baru
        // Menghapus semua baris di tabel sebelum menampilkan data baru
        tableModel.setRowCount(0);

        try {
            Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
            String sql = "SELECT id_kota, nama_kota FROM kota";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                // Menambahkan baris baru ke dalam tabel
                Vector<Object> row = new Vector<>();
                row.add(rs.getInt("id_kota"));
                row.add(rs.getString("nama_kota"));
                tableModel.addRow(row);
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void initTableModel() {
        tableModel = (DefaultTableModel) tblKota.getModel();
    }

    private void hapusDariDatabase(int idKota) {
        try {
        Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
        String sql = "DELETE FROM kota WHERE id_kota = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);

        stmt.setInt(1, idKota);

        int rowsAffected = stmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus dari database.");
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data dari database.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }

    private void ubahDiDatabase(int idKota, String namaKotaBaru) {
        try {
        Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
        String sql = "UPDATE kota SET nama_kota = ? WHERE id_kota = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);

        stmt.setString(1, namaKotaBaru);
        stmt.setInt(2, idKota);

        int rowsAffected = stmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil diubah di database.");
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengubah data di database.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }
}
