/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tama
 */
public class PesanTiket extends javax.swing.JFrame {
    /**
     * Creates new form PesanTiket
     */
    
    public PesanTiket() {
    initComponents();
    setSize(700, 550);
    isiCbID();
    // Memanggil refreshTabelTransaksi setelah menampilkan frame utama
    refreshTabelTransaksi();

    // Menambahkan event listener untuk combo box cbID
    cbID.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            String selectedID = (String) cbID.getSelectedItem();
            isiDataPenerbangan(selectedID);
        }
    });
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Transaksi = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfAsal = new javax.swing.JTextField();
        tfTujuan = new javax.swing.JTextField();
        tfJam = new javax.swing.JTextField();
        tfTipe = new javax.swing.JTextField();
        tfHarga = new javax.swing.JTextField();
        tfHari = new javax.swing.JTextField();
        tfMaskapai = new javax.swing.JTextField();
        cbID = new javax.swing.JComboBox<>();
        Penumpang = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfNIK = new javax.swing.JTextField();
        tfNama = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Transaksi.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Transaksi", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Heading", 1, 14))); // NOI18N
        Transaksi.setOpaque(false);

        jLabel2.setText("Nama Maskapai");

        jLabel5.setText("ID Penerbangan");

        jLabel6.setText("Tujuan");

        jLabel7.setText("Asal");

        jLabel8.setText("Jam");

        jLabel9.setText("Tipe");

        jLabel10.setText("Harga");

        jLabel11.setText("Hari");

        tfAsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAsalActionPerformed(evt);
            }
        });

        tfTujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTujuanActionPerformed(evt);
            }
        });

        tfJam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfJamActionPerformed(evt);
            }
        });

        tfTipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTipeActionPerformed(evt);
            }
        });

        tfHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHargaActionPerformed(evt);
            }
        });

        tfHari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHariActionPerformed(evt);
            }
        });

        tfMaskapai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaskapaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TransaksiLayout = new javax.swing.GroupLayout(Transaksi);
        Transaksi.setLayout(TransaksiLayout);
        TransaksiLayout.setHorizontalGroup(
            TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransaksiLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(cbID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TransaksiLayout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TransaksiLayout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(120, 120, 120)
                            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(TransaksiLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addComponent(tfHari, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(TransaksiLayout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(tfMaskapai, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(TransaksiLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addComponent(tfJam, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(TransaksiLayout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(tfAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(TransaksiLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addComponent(tfTipe, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(TransaksiLayout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(tfTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(TransaksiLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(0, 5, Short.MAX_VALUE)))
        );
        TransaksiLayout.setVerticalGroup(
            TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransaksiLayout.createSequentialGroup()
                .addComponent(cbID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 143, Short.MAX_VALUE))
            .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TransaksiLayout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel11)
                        .addComponent(tfHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(tfMaskapai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(tfJam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(tfAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGap(18, 18, 18)
                    .addGroup(TransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(tfTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 12, Short.MAX_VALUE)))
        );

        getContentPane().add(Transaksi);
        Transaksi.setBounds(280, 10, 380, 190);

        Penumpang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Penumpang", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Heading", 1, 14))); // NOI18N
        Penumpang.setOpaque(false);

        jLabel4.setText("Nama");

        jLabel1.setText("NIK");

        tfNIK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNIKActionPerformed(evt);
            }
        });

        tfNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PenumpangLayout = new javax.swing.GroupLayout(Penumpang);
        Penumpang.setLayout(PenumpangLayout);
        PenumpangLayout.setHorizontalGroup(
            PenumpangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PenumpangLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(PenumpangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PenumpangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNIK, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        PenumpangLayout.setVerticalGroup(
            PenumpangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PenumpangLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(PenumpangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PenumpangLayout.createSequentialGroup()
                        .addComponent(tfNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PenumpangLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getContentPane().add(Penumpang);
        Penumpang.setBounds(30, 20, 240, 170);

        btnSimpan.setBackground(new java.awt.Color(153, 153, 153));
        btnSimpan.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/floppy-disk.png"))); // NOI18N
        btnSimpan.setText("SIMPAN");
        btnSimpan.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpan);
        btnSimpan.setBounds(560, 470, 110, 30);

        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaksi", "NIK", "Nama", "Nama Maskapai", "Asal", "Tujuan", "Hari", "Jam", "Tipe", "Harga"
            }
        ));
        jScrollPane1.setViewportView(tblTransaksi);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 220, 640, 230);

        btnKembali.setBackground(new java.awt.Color(153, 153, 153));
        btnKembali.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow-left.png"))); // NOI18N
        btnKembali.setText("KEMBALI");
        btnKembali.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        getContentPane().add(btnKembali);
        btnKembali.setBounds(310, 470, 110, 30);

        btnHapus.setBackground(new java.awt.Color(153, 153, 153));
        btnHapus.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-delete.png"))); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus);
        btnHapus.setBounds(440, 470, 110, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 686, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNIKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNIKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNIKActionPerformed

    private void tfAsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAsalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAsalActionPerformed

    private void tfNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaActionPerformed

    private void tfTujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTujuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTujuanActionPerformed

    private void tfMaskapaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaskapaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaskapaiActionPerformed

    private void tfJamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfJamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfJamActionPerformed

    private void tfTipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTipeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTipeActionPerformed

    private void tfHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHargaActionPerformed

    private void tfHariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHariActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
         // Mengambil data dari form
    String nik = tfNIK.getText();
    String nama = tfNama.getText();
    String idPenerbangan = (String) cbID.getSelectedItem();

    // Memanggil metode untuk mengisi data penerbangan berdasarkan id_penerbangan
    isiDataPenerbangan(idPenerbangan);

    // Mengambil data penerbangan dari form
    String namaMaskapai = tfMaskapai.getText();
    String asal = tfAsal.getText();
    String tujuan = tfTujuan.getText();
    String hari = tfHari.getText();
    String jam = tfJam.getText();
    String tipe = tfTipe.getText();
    double harga = Double.parseDouble(tfHarga.getText());

    simpanKeTransaksi(nik, nama, idPenerbangan, namaMaskapai, asal, tujuan, hari, jam, tipe, harga);
    refreshTabelTransaksi(); // Memastikan pemanggilan ini ada
    resetForm();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
        // Menggunakan nilai userRole yang sudah diatur sebelumnya pada saat login
        String userRole = LoginGUI.getUserRole();

        // Melakukan validasi peran dan membuat frame TiketPesawat
        TiketPesawat tiketPesawatFrame = new TiketPesawat(userRole);
        tiketPesawatFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTransaksi.getSelectedRow();
    if (selectedRow != -1) {
        // Get the ID Transaksi from the selected row
        int idTransaksi = (int) tblTransaksi.getValueAt(selectedRow, 0);

        // Call the hapusTransaksi method with the selected ID Transaksi
        hapusTransaksi(idTransaksi);
        JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
        refreshTabelTransaksi(); // Refresh the table after deletion
        resetForm(); // Reset the form fields
    } else {
        // Display a message if no row is selected
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesanTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesanTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesanTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesanTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               PesanTiket pesanTiket = new PesanTiket();
                pesanTiket.setVisible(true);

            }
        });
    }
    
    
   private void isiCbID() {
        try {
            // Replace these values with your actual database connection details
            String DB_URL = "jdbc:mysql://localhost:3306/db_tiketpesawat";
            String DB_USER = "root";
            String DB_PASSWORD = "";

            Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
            String sql = "SELECT id_penerbangan FROM jadwal";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                cbID.addItem(rs.getString("id_penerbangan"));
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle exception (logging, displaying error message, etc.)
        }
    }
   
   // Method untuk mengisi text field berdasarkan id_penerbangan
    private void isiDataPenerbangan(String idPenerbangan) {
        try (Connection connection = koneksi.getConnection()) {
        // Query SQL untuk mendapatkan data berdasarkan id_penerbangan
        String query = "SELECT nama_maskapai, asal, tujuan, hari, jam, tipe, harga FROM jadwal WHERE id_penerbangan = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            // Set parameter id_penerbangan
            preparedStatement.setString(1, idPenerbangan);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                // Periksa apakah data ditemukan
                if (resultSet.next()) {
                    // Mengambil data dari hasil query
                    String namaMaskapai = resultSet.getString("nama_maskapai");
                    String asal = resultSet.getString("asal");
                    String tujuan = resultSet.getString("tujuan");
                    String hari = resultSet.getString("hari");
                    String jam = resultSet.getString("jam");
                    String tipe = resultSet.getString("tipe");
                    double harga = resultSet.getDouble("harga");


                    tfMaskapai.setText(namaMaskapai);
                    tfAsal.setText(asal);
                    tfTujuan.setText(tujuan);
                    tfHari.setText(hari);
                    tfJam.setText(jam);
                    tfTipe.setText(tipe);
                    tfHarga.setText(String.valueOf(harga));
                    } else {
                        // Data tidak ditemukan, mungkin berikan pesan atau tindakan yang sesuai
                        System.out.println("Data dengan id_penerbangan " + idPenerbangan + " tidak ditemukan.");
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle exception (logging, displaying error message, etc.)
        }
    }

    private void simpanKeTransaksi(String nik, String nama, String idPenerbangan, String namaMaskapai, String asal, String tujuan, String hari, String jam, String tipe, double harga) {
    try (Connection connection = koneksi.getConnection()) {
        // Query SQL untuk menyimpan data ke tabel transaksi
        String query = "INSERT INTO transaksi (nik, nama, id_penerbangan, nama_maskapai, asal, tujuan, hari, jam, tipe, harga) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            // Set parameter untuk query
            preparedStatement.setString(1, nik);
            preparedStatement.setString(2, nama);
            preparedStatement.setString(3, idPenerbangan);
            preparedStatement.setString(4, namaMaskapai);
            preparedStatement.setString(5, asal);
            preparedStatement.setString(6, tujuan);
            preparedStatement.setString(7, hari);
            preparedStatement.setString(8, jam);
            preparedStatement.setString(9, tipe);
            preparedStatement.setDouble(10, harga);

            // Eksekusi query
            preparedStatement.executeUpdate();
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Handle exception (logging, displaying error message, etc.)
    }
}
    
    private void resetForm() {
    // Mengosongkan nilai pada semua field
    tfNIK.setText("");
    tfNama.setText("");
    cbID.setSelectedIndex(0);
    tfMaskapai.setText("");
    tfAsal.setText("");
    tfTujuan.setText("");
    tfHari.setText("");
    tfJam.setText("");
    tfTipe.setText("");
    tfHarga.setText("");
}
    
    private void refreshTabelTransaksi() {
    try (Connection connection = koneksi.getConnection()) {
        // Query SQL untuk mendapatkan data transaksi
        String query = "SELECT id_transaksi, nik, nama, nama_maskapai, asal, tujuan, hari, jam, tipe, harga FROM transaksi";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                // Membuat DefaultTableModel
                DefaultTableModel model = new DefaultTableModel();

               // Menambahkan kolom-kolom ke model
                model.addColumn("ID Transaksi");
                model.addColumn("NIK");
                model.addColumn("Nama");
                model.addColumn("Nama Maskapai");
                model.addColumn("Asal");
                model.addColumn("Tujuan");
                model.addColumn("Hari");
                model.addColumn("Jam");
                model.addColumn("Tipe");
                model.addColumn("Harga");

                // Menambahkan data ke model
                while (resultSet.next()) {
                    Object[] row = {
                        resultSet.getInt("id_transaksi"),
                        resultSet.getString("nik"),
                        resultSet.getString("nama"),
                        resultSet.getString("nama_maskapai"),
                        resultSet.getString("asal"),
                        resultSet.getString("tujuan"),
                        resultSet.getString("hari"),
                        resultSet.getTime("jam"),
                        resultSet.getString("tipe"),
                        resultSet.getDouble("harga")
                    };
                    model.addRow(row);
                }

                // Mengatur model pada tabel
                tblTransaksi.setModel(model);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Handle exception (logging, displaying error message, etc.)
    }
}
    
      private void hapusTransaksi(int idTransaksi) {
        try (Connection connection = koneksi.getConnection()) {
        // Query SQL to delete a transaction based on ID Transaksi
        String query = "DELETE FROM transaksi WHERE id_transaksi = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            // Set the parameter for the query
            preparedStatement.setInt(1, idTransaksi);

            // Execute the query
            preparedStatement.executeUpdate();
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Handle exception (logging, displaying error message, etc.)
    }
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Penumpang;
    private javax.swing.JPanel Transaksi;
    private javax.swing.JLabel background;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> cbID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransaksi;
    private javax.swing.JTextField tfAsal;
    private javax.swing.JTextField tfHarga;
    private javax.swing.JTextField tfHari;
    private javax.swing.JTextField tfJam;
    private javax.swing.JTextField tfMaskapai;
    private javax.swing.JTextField tfNIK;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfTipe;
    private javax.swing.JTextField tfTujuan;
    // End of variables declaration//GEN-END:variables

}
