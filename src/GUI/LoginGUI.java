/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Tama
 */
public class LoginGUI extends javax.swing.JFrame {
   private static String userRole = "";

    public static void setUserRole(String role) {
        userRole = role;
    }

    public static String getUserRole() {
        return userRole;
    }
    

    /**
     * Creates new form LoginFormGUI
     */
    public LoginGUI() {
        initComponents();
        setSize(800,540);
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfUser = new javax.swing.JTextField();
        tfPass = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));
        getContentPane().setLayout(null);

        tfUser.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        getContentPane().add(tfUser);
        tfUser.setBounds(70, 180, 260, 30);

        tfPass.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        getContentPane().add(tfPass);
        tfPass.setBounds(70, 250, 260, 30);

        btnLogin.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btnLogin.setText("LOGIN");
        btnLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin);
        btnLogin.setBounds(70, 350, 260, 30);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(70, 220, 100, 24);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Username");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 150, 110, 24);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Tama\\Downloads\\bg-login-form.png")); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, -10, 810, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
       String username = tfUser.getText();
    char[] passwordChars = tfPass.getPassword();
    String password = new String(passwordChars);

    // Memeriksa role
    userRole = getUserRoleFromDatabase(username);

    if (userRole != null) {
        // Login berhasil, dan userRole berisi peran pengguna
        String message = "Login berhasil. Role: " + userRole;
        JOptionPane.showMessageDialog(this, message, "Informasi", JOptionPane.INFORMATION_MESSAGE);

        // Lakukan tindakan setelah login berhasil, misalnya buka jendela baru
        // Pindah ke JFrame TiketPesawat setelah login berhasil
        TiketPesawat tiketPesawatFrame = new TiketPesawat(userRole);
        tiketPesawatFrame.setSize(800, 540);
        tiketPesawatFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        tiketPesawatFrame.setVisible(true);

        // Sembunyikan frame login
        this.setVisible(false);
    } else {
        String errorMessage = "Login gagal. Periksa username dan password.";
        JOptionPane.showMessageDialog(this, errorMessage, "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnLoginActionPerformed
    
    
    
    public void loginAsAdmin() {
     String username = "admin";
        String password = "admin";

        if (isValidLogin(username, password)) {
            userRole = getUserRoleFromDatabase(username);
            System.out.println("User role: " + userRole);
            // ...
        }
}

    
    private void setIcon() {
        try {
            // Ganti path dengan path yang sesuai
            ImageIcon icon = new ImageIcon(getClass().getResource("bg-login-form.png"));
        } catch (Exception e) {
            System.err.println("Error setting icon: " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField tfPass;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables

    private boolean isValidLogin(String username, String password) {
        String query = "SELECT * FROM login WHERE username=? AND password=?";
    userRole = getUserRoleFromDatabase(username);

    try (Connection connection = koneksi.getConnection();
         PreparedStatement statement = connection.prepareStatement(query)) {

        statement.setString(1, username);
        statement.setString(2, password);

        try (ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                userRole = resultSet.getString("role");
                return true;  // Return true if a record is found
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return false;
    }  

    private String getUserRoleFromDatabase(String username) {
      String query = "SELECT role FROM login WHERE username=?";
    
    try (Connection connection = koneksi.getConnection();
         PreparedStatement statement = connection.prepareStatement(query)) {
        
        statement.setString(1, username);
        
        try (ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getString("role");
            } else {
                // Jika pengguna tidak ditemukan, dapat menentukan peran default atau melempar exception
                return "pengguna_lain";
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Mengembalikan peran default jika terjadi kesalahan database
        return "pengguna_lain";
    }  
    }
}
