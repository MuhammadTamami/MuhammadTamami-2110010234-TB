/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Frame;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.sql.Time;
import java.text.SimpleDateFormat;
/**
 *
 * @author Tama
 */
public class TiketPesawat extends javax.swing.JFrame {

    private static String getUserRoleFromDatabase(String username, String password) {
        if ("admin".equals(username) && "admin".equals(password)) {
        return "admin";
    } else if ("manajer".equals(username) && "manajer".equals(password)) {
        return "manajer";
    } else {
        return "unknown";
    }
    }
      private String userRole; 
      

    /**
     * Creates new form TiketPesawat
     */
    public TiketPesawat(String userRole) {
        this.userRole = userRole;
        initComponents();
        setSize(800,540);
        setLocationRelativeTo(null);
        initDataOnFirstRun();
    }
    
    
    
   public DefaultTableModel getJadwalTableModel() {
    return (DefaultTableModel) tblJadwal.getModel();
    }

    // Setter untuk model tabel jadwal
    public void setJadwalTableModel(DefaultTableModel model) {
        tblJadwal.setModel(model);
    }   
    
    public void updateJadwalTable() {
        TambahJadwal tambahJadwalFrame = getActiveTambahJadwalFrame();
        if (tambahJadwalFrame != null) {
            tambahJadwalFrame.updateJadwalTable();
        }
    }
    
     // Non-static method to set userRole
    public void setUserRole(String userRole) {
        this.userRole = userRole;
    }
    
    public void addDataToJadwalTable(Object[] data) {
        DefaultTableModel model = (DefaultTableModel) tblJadwal.getModel();
        model.addRow(data);
        updateJadwalTable(); // Update the table view
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnpesan = new javax.swing.JButton();
        btnreport = new javax.swing.JButton();
        btnjadwal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJadwal = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        tfCari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCari = new javax.swing.JButton();
        lblbackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1075, 675));
        getContentPane().setLayout(null);

        btnpesan.setBackground(new java.awt.Color(102, 153, 255));
        btnpesan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-tiket-pesawat.png"))); // NOI18N
        btnpesan.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnpesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpesanActionPerformed(evt);
            }
        });
        getContentPane().add(btnpesan);
        btnpesan.setBounds(60, 120, 130, 110);

        btnreport.setBackground(new java.awt.Color(102, 153, 255));
        btnreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-report.png"))); // NOI18N
        btnreport.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btnreport.setMaximumSize(new java.awt.Dimension(107, 85));
        btnreport.setMinimumSize(new java.awt.Dimension(107, 85));
        btnreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportActionPerformed(evt);
            }
        });
        getContentPane().add(btnreport);
        btnreport.setBounds(60, 270, 130, 110);

        btnjadwal.setBackground(new java.awt.Color(102, 153, 255));
        btnjadwal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-jadwal.png"))); // NOI18N
        btnjadwal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btnjadwal.setMaximumSize(new java.awt.Dimension(107, 85));
        btnjadwal.setMinimumSize(new java.awt.Dimension(107, 85));
        btnjadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjadwalActionPerformed(evt);
            }
        });
        getContentPane().add(btnjadwal);
        btnjadwal.setBounds(60, 420, 130, 110);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblJadwal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Penerbangan", "Nama Maskapai", "Asal", "Tujuan", "Hari", "Jam", "Tipe", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblJadwal);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(330, 140, 690, 430);

        tfCari.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel1.setText("PENCARIAN");

        btnCari.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loupe.png"))); // NOI18N
        btnCari.setText("CARI");
        btnCari.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCari)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(330, 80, 690, 40);

        lblbackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Menu.png"))); // NOI18N
        getContentPane().add(lblbackground);
        lblbackground.setBounds(0, -70, 1130, 760);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnjadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjadwalActionPerformed
        // Mengecek peran pengguna sebelum memberikan akses
    // Mengecek peran pengguna sebelum memberikan akses
        String message;
        String infoMessage = "Sedang menggunakan role: " + userRole;
        JOptionPane.showMessageDialog(null, infoMessage, "Informasi", JOptionPane.INFORMATION_MESSAGE);

        if ("admin".equals(userRole)) {
            // Jika peran adalah admin, berikan pesan kesalahan
            message = "Anda tidak memiliki izin untuk menambah jadwal.";
            JOptionPane.showMessageDialog(null, message, "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else if ("manajer".equals(userRole)) {
            // Jika peran adalah manajer, berikan hak akses
            message = "Hak akses diberikan untuk menambah jadwal.";
            JOptionPane.showMessageDialog(null, message, "Informasi", JOptionPane.INFORMATION_MESSAGE);

            // Buka JFrame FormPilih
            FormPilih formPilihFrame = new FormPilih();
            formPilihFrame.setVisible(true);
            formPilihFrame.setSize(416,300);
            dispose();
                
        } else {
            // Peran tidak dikenali, berikan pesan kesalahan
            message = "Peran tidak valid.";
            JOptionPane.showMessageDialog(null, message, "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnjadwalActionPerformed

    private void btnpesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpesanActionPerformed
        // TODO add your handling code here:
         // Membuat instance dari kelas PesanTiket
        PesanTiket pesanTiketFrame = new PesanTiket();

        // Menampilkan frame PesanTiket
        pesanTiketFrame.setVisible(true);
        setSize(700, 550);
        this.dispose();
    }//GEN-LAST:event_btnpesanActionPerformed

    private void btnreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportActionPerformed
        // TODO add your handling code here:
        String message;
        if ("admin".equals(userRole)) {
            // Jika peran adalah admin, berikan pesan kesalahan
            message = "Anda tidak memiliki akses";
            JOptionPane.showMessageDialog(null, message, "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else if ("manajer".equals(userRole)) {
            // Jika peran adalah manajer, berikan hak akses
            message = "Hak akses diberikan";
            JOptionPane.showMessageDialog(null, message, "Informasi", JOptionPane.INFORMATION_MESSAGE);
            Laporan laporanFrame = new Laporan();

            // Menampilkan frame Laporan
            laporanFrame.setVisible(true);
            setSize(700, 550);
            this.dispose();
        }
    }//GEN-LAST:event_btnreportActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        String keyword = tfCari.getText().trim();

    // Mendapatkan model tabel
    DefaultTableModel model = (DefaultTableModel) tblJadwal.getModel();

    // Membersihkan data pada model tabel
    model.setRowCount(0);

    try (Connection connection = koneksi.getConnection()) {
        // Query SQL untuk mencari data berdasarkan keyword
        String query = "SELECT * FROM jadwal WHERE hari LIKE ? OR tujuan LIKE ? OR tipe LIKE ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            // Set parameter untuk query
            preparedStatement.setString(1, "%" + keyword + "%"); // '%' digunakan sebagai wildcard
            preparedStatement.setString(2, "%" + keyword + "%");
            preparedStatement.setString(3, "%" + keyword + "%");

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                // Menambahkan data hasil pencarian ke model tabel
                while (resultSet.next()) {
                    String idPenerbangan = resultSet.getString("id_penerbangan");
                    String namaMaskapai = resultSet.getString("nama_maskapai");
                    String asal = resultSet.getString("asal");
                    String tujuan = resultSet.getString("tujuan");
                    String hari = resultSet.getString("hari");

                    // Dapatkan Waktu sebagai java.sql.Time
                    Time waktu = resultSet.getTime("jam");

                    // Konversi java.sql.Time menjadi java.util.Date
                    Date dateWaktu = new Date(waktu.getTime());

                    // Format java.util.Date
                    String formattedWaktu = new SimpleDateFormat("HH:mm:ss").format(dateWaktu);

                    String tipe = resultSet.getString("tipe");
                    double harga = resultSet.getDouble("harga");

                    // Tambahkan data yang diambil ke JTable
                    model.addRow(new Object[]{idPenerbangan, namaMaskapai, asal, tujuan, hari, formattedWaktu, tipe, harga});
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error saat mencari data dari database.");
    }
    }//GEN-LAST:event_btnCariActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void setIcon() {
       lblbackground.setIcon(new javax.swing.ImageIcon("Menu.png"));
       btnpesan.setIcon(new javax.swing.ImageIcon("logo-tiket-pesawat.png"));
       btnjadwal.setIcon(new javax.swing.ImageIcon("logo-report.png"));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiketPesawat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiketPesawat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiketPesawat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiketPesawat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        String username = "admin";  
        String password = "admin";  

        String userRole = getUserRoleFromDatabase(username, password);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TiketPesawat(userRole).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnjadwal;
    private javax.swing.JButton btnpesan;
    private javax.swing.JButton btnreport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblbackground;
    private javax.swing.JTable tblJadwal;
    private javax.swing.JTextField tfCari;
    // End of variables declaration//GEN-END:variables

    private TambahJadwal getActiveTambahJadwalFrame() {
        for (Frame frame : Frame.getFrames()) {
        if (frame instanceof TambahJadwal && ((TambahJadwal) frame).isActive()) {
            return (TambahJadwal) frame;
        }
    }
    return null;
    }

    private void initDataOnFirstRun() {
       try {
        DefaultTableModel model = (DefaultTableModel) tblJadwal.getModel();
        model.setRowCount(0); // Clear existing data

        Connection connection = koneksi.getConnection();
        String query = "SELECT * FROM jadwal";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query);
             ResultSet resultSet = preparedStatement.executeQuery()) {

            while (resultSet.next()) {
                String idPenerbangan = resultSet.getString("id_penerbangan");
                String namaMaskapai = resultSet.getString("nama_maskapai");
                String asal = resultSet.getString("asal");
                String tujuan = resultSet.getString("tujuan");
                String hari = resultSet.getString("hari");

                // Dapatkan Waktu sebagai java.sql.Time
                Time waktu = resultSet.getTime("jam");

                // Konversi java.sql.Time menjadi java.util.Date
                Date dateWaktu = new Date(waktu.getTime());

                // Format java.util.Date
                String formattedWaktu = new SimpleDateFormat("HH:mm:ss").format(dateWaktu);

                String tipe = resultSet.getString("tipe");
                double harga = resultSet.getDouble("harga");

                // Tambahkan data yang diambil ke JTable
                model.addRow(new Object[]{idPenerbangan, namaMaskapai, asal, tujuan, hari, formattedWaktu, tipe, harga});
            }

            tblJadwal.setModel(model);

        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error saat mengambil data dari database.");
    }
    }
}
